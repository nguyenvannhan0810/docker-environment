version: '3'

networks:
  programming_network:
    driver: bridge

services:
  nginx_pocket_be:
    image: nginx:1.22-alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
      - ./docker-config/nginx/conf:/etc/nginx/conf.d
      - ./docker-config/nginx/logs:/var/log/nginx
    networks:
      programming_network:
        aliases: 
          - pocket-api.test
          - pocket-id-server.test

  mysql5729:
    image: mysql:5.7.29
    container_name: mysql57
    volumes:
      - ./docker-config/mysql5729:/var/lib/mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_USER: root
      MYSQL_PASSWORD: 983537
      MYSQL_ROOT_PASSWORD: 983537
    networks:
      - programming_network

  postgres144:
    image: postgres:14.4-alpine
    container_name: postgres14
    volumes:
      - ./docker-config/postgres144:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=983537
    networks:
      - programming_network

  php72:
    build:
      context: .
      dockerfile: ./docker-config/php72/Dockerfile
    container_name: php72
    restart: unless-stopped
    tty: true
    volumes:
      - ./src:/var/www/html
    ports:
      - "9072:9000"
    networks:
      - programming_network

  php81:
    build:
      context: .
      dockerfile: ./docker-config/php81/Dockerfile
    container_name: php81
    restart: unless-stopped
    tty: true
    environment:
      - XDEBUG_MODE=coverage
    volumes:
      - ./src:/var/www/html
    ports:
      - "9081:9000"
    networks:
      programming_network:
        aliases: 
          - pocket-api.test
          - pocket-id-server.test

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "./docker-config/zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.2
    ports:
      - "9092:9092"
    volumes:
      - "./docker-config/kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
